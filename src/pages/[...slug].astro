---
import BlogLayout from "@/layouts/blog-layout.astro";
import "@/styles/markdown.css";
import { getPostWords, readingTime } from "@/utils/utils";
import "@fontsource/montserrat/900.css";
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";
import { getCollection, render } from "astro:content";

export const getStaticPaths = (async () => {
  const posts = await getCollection("posts");

  return posts.map((post) => {
    // Extract the file path - it's relative from your glob pattern

    return {
      params: {
        slug: post.slug,
      },
      props: {
        post,
      },
    };
  });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { post } = Astro.props;
const { Content } = await render(post);
const { data, body } = post;
const words = getPostWords(body);
const readTime = readingTime(words);
---

<BlogLayout frontmatter={data}>
  <article>
    <div class="flex justify-between">
      <h1 class="text-[30px] font-inter leading-[30px]">
        {data.title}
      </h1>
      <p class="mb-6 text-right mt-2 text-[11px] dark:text-gray-300">
        {
          new Date(data.date).toLocaleDateString("cn", {
            day: "2-digit",
            month: "2-digit",
            year: "numeric",
          })
        }
      </p>
    </div>
    <div class="flex flex-col mt-2">
      <p class="mt-2 text-[13px] text-gray-700 dark:text-gray-300/50">
        word count：{words}
      </p>
      <p class="mt-2 text-[13px] text-gray-700 dark:text-gray-300/50">
        estimated reading time：{readTime}
        {readTime === 1 ? `minute` : `minutes`}
      </p>
    </div>
    <div class="markdown mt-10">
      <Content />
    </div>
  </article>
</BlogLayout>
